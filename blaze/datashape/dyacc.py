
# blaze/datashape/dyacc.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'h\xb6\xbfeJ%\xb2\xc2\xdf\xb4\xde\xe0\x8a\xbf\xab\x96'
    
_lr_action_items = {'LBRACE':([0,2,3,5,6,7,9,14,17,18,19,22,24,27,29,],[1,-6,-11,-4,-12,-10,1,1,-4,1,-13,-9,1,1,-5,]),'RBRACE':([1,10,11,12,20,25,26,28,31,],[-20,19,-15,-16,-20,-14,-18,-19,-17,]),'SEMI':([1,10,11,12,20,25,26,28,31,],[-20,20,-15,-16,-20,20,-18,-19,-17,]),')':([3,6,7,19,22,30,],[-11,-12,-10,-13,-9,31,]),'(':([21,],[27,]),'NUMBER':([0,2,3,5,6,7,9,14,17,18,19,21,22,24,27,29,],[6,-6,-11,-4,-12,-10,6,6,-4,6,-13,28,-9,6,6,-5,]),'EQUALS':([15,16,23,],[24,-8,-7,]),'COMMA':([2,3,6,7,19,22,29,30,],[14,-11,-12,-10,-13,14,14,14,]),'COLON':([13,],[21,]),'$end':([2,3,4,5,6,7,9,17,18,19,22,29,],[-6,-11,0,-2,-12,-10,-1,-4,-3,-13,-9,-5,]),'TYPE':([0,2,3,5,6,7,9,17,18,19,22,29,],[8,-6,-11,-4,-12,-10,8,-4,8,-13,-9,-5,]),'NAME':([0,1,2,3,5,6,7,8,9,14,15,16,17,18,19,20,21,22,23,24,27,29,],[3,13,-6,-11,-4,-12,-10,16,3,3,16,-8,-4,3,-13,13,26,-9,16,3,3,-5,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rhs_expression':([0,9,14,18,24,27,],[2,2,22,2,29,30,]),'record_opt':([1,20,],[10,25,]),'top':([0,],[4,]),'stmt':([0,9,18,],[5,17,17,]),'record':([0,9,14,18,24,27,],[7,7,7,7,7,7,]),'record_item':([1,20,],[11,11,]),'lhs_expression':([8,15,23,],[15,23,23,]),'empty':([1,20,],[12,12,]),'mod':([0,9,18,],[9,18,18,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> mod','top',1,'p_top','',120),
  ('top -> stmt','top',1,'p_top','',121),
  ('mod -> mod mod','mod',2,'p_decl1','',125),
  ('mod -> stmt','mod',1,'p_decl2','',129),
  ('stmt -> TYPE lhs_expression EQUALS rhs_expression','stmt',4,'p_statement_assign','',133),
  ('stmt -> rhs_expression','stmt',1,'p_statement_expr','',151),
  ('lhs_expression -> lhs_expression lhs_expression','lhs_expression',2,'p_lhs_expression','',155),
  ('lhs_expression -> NAME','lhs_expression',1,'p_lhs_expression_node','',160),
  ('rhs_expression -> rhs_expression COMMA rhs_expression','rhs_expression',3,'p_rhs_expression','',164),
  ('rhs_expression -> record','rhs_expression',1,'p_rhs_expression_node1','',169),
  ('rhs_expression -> NAME','rhs_expression',1,'p_rhs_expression_node2','',173),
  ('rhs_expression -> NUMBER','rhs_expression',1,'p_rhs_expression_node2','',174),
  ('record -> LBRACE record_opt RBRACE','record',3,'p_record','',178),
  ('record_opt -> record_opt SEMI record_opt','record_opt',3,'p_record_opt1','',186),
  ('record_opt -> record_item','record_opt',1,'p_record_opt2','',193),
  ('record_opt -> empty','record_opt',1,'p_record_opt3','',197),
  ('record_item -> NAME COLON ( rhs_expression )','record_item',5,'p_record_item1','',201),
  ('record_item -> NAME COLON NAME','record_item',3,'p_record_item2','',205),
  ('record_item -> NAME COLON NUMBER','record_item',3,'p_record_item2','',206),
  ('empty -> <empty>','empty',0,'p_empty','',210),
]
