# dlex.py. This file automatically created by PLY (version 3.4). Don't edit!
_tabversion   = '3.4'
_lextokens    = {'LNOT': 1, 'CONST': 1, 'LPAREN': 1, 'FOREIGN': 1, 'LBRACKET': 1, 'WHILE': 1, 'COLON': 1, 'PRINT': 1, 'RETURN': 1, 'TRUE': 1, 'MINUS': 1, 'DEF': 1, 'RBRACE': 1, 'LAND': 1, 'RPAREN': 1, 'SEMI': 1, 'NE': 1, 'PLUS': 1, 'LT': 1, 'COMMA': 1, 'INTEGER': 1, 'STRING': 1, 'ASSIGN': 1, 'GT': 1, 'DIVIDE': 1, 'FOR': 1, 'ELSE': 1, 'GE': 1, 'LE': 1, 'ARROW': 1, 'IN': 1, 'VAR': 1, 'TIMES': 1, 'EQ': 1, 'ID': 1, 'IF': 1, 'LOR': 1, 'LBRACE': 1, 'FALSE': 1, 'FLOAT': 1, 'RANGE': 1, 'RBRACKET': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_FLOAT>(([0-9]+(\\.[0-9]*)?[eE][\\+-]?[0-9]+)|(\\.[0-9]+([eE][\\+-]?[0-9]+)?)|([0-9]+\\.[0-9]*)))|(?P<t_INTEGER>(0|0x|0X)?\\d+)|(?P<t_STRING>\\"((\\\\.)|[^\\\\\\n])*?\\")|(?P<t_ID>[a-zA-Z_][a-zA-Z0-9_]*)|(?P<t_newline>\\n+)|(?P<t_COMMENT>\\#.*)|(?P<t_FALSE>False)|(?P<t_LOR>\\|\\|)|(?P<t_TRUE>True)|(?P<t_LE><=)|(?P<t_LBRACKET>\\[)|(?P<t_NE>!=)|(?P<t_PLUS>\\+)|(?P<t_RBRACE>\\})|(?P<t_LPAREN>\\()|(?P<t_LBRACE>\\{)|(?P<t_SEMI>\\;)|(?P<t_ARROW>->)|(?P<t_TIMES>\\*)|(?P<t_RBRACKET>\\])|(?P<t_GE>>=)|(?P<t_RPAREN>\\))|(?P<t_LAND>&&)|(?P<t_EQ>==)|(?P<t_COLON>:)|(?P<t_COMMA>,)|(?P<t_DIVIDE>/)|(?P<t_LT><)|(?P<t_ASSIGN>=)|(?P<t_MINUS>-)|(?P<t_LNOT>!)|(?P<t_GT>>)', [None, ('t_FLOAT', 'FLOAT'), None, None, None, None, None, None, ('t_INTEGER', 'INTEGER'), None, ('t_STRING', 'STRING'), None, None, ('t_ID', 'ID'), ('t_newline', 'newline'), ('t_COMMENT', 'COMMENT'), (None, 'FALSE'), (None, 'LOR'), (None, 'TRUE'), (None, 'LE'), (None, 'LBRACKET'), (None, 'NE'), (None, 'PLUS'), (None, 'RBRACE'), (None, 'LPAREN'), (None, 'LBRACE'), (None, 'SEMI'), (None, 'ARROW'), (None, 'TIMES'), (None, 'RBRACKET'), (None, 'GE'), (None, 'RPAREN'), (None, 'LAND'), (None, 'EQ'), (None, 'COLON'), (None, 'COMMA'), (None, 'DIVIDE'), (None, 'LT'), (None, 'ASSIGN'), (None, 'MINUS'), (None, 'LNOT'), (None, 'GT')])]}
_lexstateignore = {'INITIAL': ' \t\r'}
_lexstateerrorf = {'INITIAL': 't_error'}
